<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout
    android:id="@+id/activity_main"
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.example.robin.coordinatorlayouttest.activity.MainActivity">

    <!--app:theme="@style/AppTheme.AppBarOverlay": 主要是为了设置OverFlow三个点的颜色-->
    <android.support.design.widget.AppBarLayout
        android:id="@+id/appBarLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        app:theme="@style/AppTheme.AppBarOverlay">

        <!--?attr/actionBarSize:表示根据屏幕的分辨率采用系统默认的高度-->
        <!--如果低版本也要使用的话,则需要使用v7包的,否则只有api21上才能有效-->
        <!--设置的layout_scrollFlags有如下几种选项:-->
        <!--scroll: 所有想滚动出屏幕的view都需要设置这个flag-->
        <!--enterAlways: 这个flag让任意向下的滚动都会导致该view变为可见,启用快速“返回模式”。-->
        <!--enterAlwaysCollapsed: 当你的视图已经设置minHeight属性又使用此标志时-->
        <!--你的视图只能以最小高度进入,只有当滚动视图到达顶部时才扩大到完整高度-->
        <!--exitUntilCollapsed: 滚动退出屏幕,最后折叠在顶端-->

        <!--app:layout_scrollFlags="scroll|enterAlwaysCollapsed"
        滑动到顶部的时候,再继续下拉才滑出Toolbar-->
        <!--app:layout_scrollFlags="scroll|enterAlways"
        只要下拉就会滑出Toolbar-->
        <!--app:popupTheme="@style/AppTheme.PopupOverlay": 主要是为了设置OverFlow菜单背景和文字色-->
        <android.support.v7.widget.Toolbar
            android:id="@+id/toolBar"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            app:layout_scrollFlags="scroll|enterAlways"
            app:popupTheme="@style/AppTheme.PopupOverlay"/>

        <!--两个关键属性: app:tabGravity 和 app:tabMode-->
        <!--app:tabGravity: app:tabGravity="center" 和 app:tabGravity="fill" 两种-->
        <!--app:tabMode: app:tabMode="scrollable" 和 app:tabMode="fixed" 两种-->
        <!--这两个属性互相搭配可以控制TabLayout中的tabText(文字)与tabIndicator(tab条)布局分布-->

        <!--布局技巧: 效果是tabIndicator不是在文字下面滑动,而是作为了文字背景滑动-->
        <!--1. app:tabIndicatorHeight: 设置高一点,占满TabLayout高度-->
        <!--2. app:tabIndicatorColor: 设置颜色的前面加上透明效果的数字-->
        <android.support.design.widget.TabLayout
            android:id="@+id/tabLayout"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:tabGravity="center"
            app:tabIndicatorColor="#30d60f0f"
            app:tabIndicatorHeight="100dp"
            app:tabMode="scrollable"
            app:tabSelectedTextColor="#ffffff"
            app:tabTextColor="#50ffffff"/>

    </android.support.design.widget.AppBarLayout>

    <android.support.design.widget.FloatingActionButton
        android:id="@+id/fab"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="bottom|end"
        android:layout_margin="16dp"
        app:srcCompat="@android:drawable/ic_dialog_email"/>

    <!--app:layout_behavior="@string/appbar_scrolling_view_behavior"-->
    <!--这个属性告诉CoordinatorLayout,该组件是带有滑动行为的组件-->
    <!--然后CoordinatorLayout在接受到滑动时会通知AppBarLayout中可滑动的Toolbar可以滑出屏幕了-->
    <!--这里用的ViewPager,是横向滑动的,所以ToolBar没有滑出屏幕-->
    <!--但是ViewPager中加载的Fragment中的RecyclerView有上下滑动属性
    可以触发添加了layout_scrollFlags属性的View的滑出行为-->
    <!--而且如果不设置layout_behavior,ViewPager高度将占据整个屏幕-->
    <android.support.v4.view.ViewPager
        android:id="@+id/viewPager"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior"/>
</android.support.design.widget.CoordinatorLayout>
